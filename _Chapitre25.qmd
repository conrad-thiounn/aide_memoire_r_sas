# Créer ses propres fonctions

Pour en savoir plus sur l'écriture de fonctions en `tidyverse` :
<https://brad-cannell.github.io/r_notes/tidy-evaluation.html>.

## Sélection de données
::: {.panel-tabset group="language"}

## SAS {.unnumbered .unlisted}
``` sas
%macro Selection (BaseInitiale, BaseFinale, condition);
  data &BaseFinale.;
    set BaseInitiale (&condition);
  run;
%mend Selection;
%Selection();
```

## R base {.unnumbered .unlisted}
```{r, warning=FALSE, message=FALSE, results='hide'}

```

## tidyverse {.unnumbered .unlisted}

```{r, warning=FALSE, message=FALSE, results='hide'}

```

## data.table {.unnumbered .unlisted}
```{r, warning=FALSE, message=FALSE, results='hide'}

```

## arrow/duckdb {.unnumbered .unlisted}
```{r, warning=FALSE, message=FALSE}

```

:::

## Fonction calculant une moyenne
::: {.panel-tabset group="language"}

## SAS {.unnumbered .unlisted}
``` sas
%macro CalculMoyenne0 (baseDonnees, variables, statistique, condition);
  proc means data = &baseDonnees. &statistique.;
    var &variables.;
  run;
%mend CalculMoyenne0;
%CalculMoyenne0(baseDonnees = donnees_sas, variables = note_formateur note_contenu);
%CalculMoyenne0(baseDonnees = donnees_sas, variables = note_formateur note_contenu, statistique = mean sum median);
%CalculMoyenne0(baseDonnees = donnees_sas, variables = note_formateur note_contenu, statistique = mean sum, condition = where sexef = "Femme");
```

## R base {.unnumbered .unlisted}
```{r, warning=FALSE, message=FALSE, results='hide'}
CalculMoyenne0 <- function(baseDonnees, variable, statistique = "mean", ...) {
  baseDonnees <- subset(baseDonnees, ...)
  moyenne <- lapply(baseDonnees[, variable], get(statistique), na.rm = TRUE)
  moyenne <- data.frame(moyenne)
  return(moyenne)
}
CalculMoyenne0(donnees_rbase, c("note_formateur", "note_contenu"))
CalculMoyenne0(donnees_rbase, c("note_formateur", "note_contenu"), statistique = "median")
CalculMoyenne0(donnees_rbase, c("note_formateur", "note_contenu"), "mean", sexef == "Femme")
```

## tidyverse {.unnumbered .unlisted}

```{r, warning=FALSE, message=FALSE, results='hide'}

```

## data.table {.unnumbered .unlisted}
```{r, warning=FALSE, message=FALSE, results='hide'}

```

## arrow/duckdb {.unnumbered .unlisted}
```{r, warning=FALSE, message=FALSE}

```

:::

Autres exemples de fonctions possibles : statistiques par groupes (proc tabulate), proc freq, ajout dans la base d'indicatrices de présence en stock à la fin du mois (%local).